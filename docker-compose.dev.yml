# docker-compose.dev.yml

services:
  db:
    image: mysql:8.0
    container_name: corestack_db
    env_file:
      - ./.env.db
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password"]
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql-db:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$$MYSQL_ROOT_PASSWORD --silent"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  backend:
    build:
      context: ./flask-backend
      dockerfile: Dockerfile.dev
    container_name: corestack_backend
    env_file:
      - ./.env.backend
      - ./.env.db
    depends_on:
      db:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ./flask-backend:/app
    expose:
      - "5000"
    restart: unless-stopped

  frontend:
    build:
      context: ./react-frontend
      dockerfile: Dockerfile.dev
    container_name: corestack_frontend
    working_dir: /app
    volumes:
      - ./react-frontend:/app
      - frontend-node-modules:/app/node_modules
    environment:
      - VITE_API_BASE_URL=/api
    expose:
      - "5173"
    command:
      - sh
      - -lc
      - >
        if [ ! -d node_modules ] || [ ! -f node_modules/.bin/vite ]; then
          echo "[frontend] installing deps...";
          if [ -f package-lock.json ]; then npm ci; else npm install; fi;
        fi;
        npm run dev -- --host 0.0.0.0 --port 5173
    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    container_name: corestack_nginx
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

volumes:
  db-data:
  frontend-node-modules:
