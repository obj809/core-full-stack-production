# docker-compose.prod.yml

services:
  db:
    image: mysql:8.0
    container_name: corestack_prod_db
    env_file:
      - ./.env.db
    command:
      [
        "mysqld",
        "--default-authentication-plugin=mysql_native_password",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci"
      ]
    volumes:
      - db-data-prod:/var/lib/mysql
      - ./mysql-db:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$$MYSQL_ROOT_PASSWORD --silent"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  backend:
    build:
      context: ./flask-backend
      dockerfile: Dockerfile
    container_name: corestack_prod_backend
    env_file:
      - ./.env.backend
      - ./.env.db
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "5000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5000/health"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  web:
    build:
      context: ./react-frontend
      dockerfile: Dockerfile
    container_name: corestack_prod_web
    depends_on:
      - backend
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  db-data-prod:
